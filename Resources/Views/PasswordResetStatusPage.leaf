#/* The context structure
struct ResetPasswordStatusContext : Encodable {
	struct ServicePasswordResetStatus : Encodable {
		var serviceName: String
		var isExecuting: Bool
		var hasRun: Bool
		var errorStr: String?
	}
	var userEmail: String
	var isExecuting: Bool
	var servicesResetStatus: [ServicePasswordResetStatus]
}
*/

#set("title") {
	Password Reset for #(userEmail)
}

#set("additional_head_tags") {
	#if(isExecuting) {
		<meta http-equiv="refresh" content="1">
	}
}

#set("body") {
	<h1>Password Reset
	#if(isExecuting) {
		in Progress
	} else {
		Results
	}
	for #(userEmail)</h1>
	<table>
		#for(serviceReset in servicesResetStatus) {
			<tr>
				<td>#(serviceReset.serviceName)</td>
				<td style="padding-left: 21px;">
					#if(serviceReset.isExecuting) {
						üîµ In Progress‚Ä¶
					} else if(serviceReset.errorStr) {
						üõë Error (#(serviceReset.errorStr))
					} else if(serviceReset.hasRun) {
						‚úÖ Success
					} else {
						‚ö™Ô∏è Idle
					}
				</td>
			</tr>
		}
	</table>
}

#embed("lib/Master")
