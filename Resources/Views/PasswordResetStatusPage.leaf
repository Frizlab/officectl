#/* The context structure
struct ResetPasswordStatusContext : Encodable {
	struct ServicePasswordResetStatus : Encodable {
		var isExecuting: Bool
		var errorStr: String?
	}
	var userEmail: String
	var isExecuting: Bool
	var isSuccessful: Bool
	var ldapResetStatus: ServicePasswordResetStatus
	var googleResetStatus: ServicePasswordResetStatus
	var openDirectoryResetStatus: ServicePasswordResetStatus
}
*/

#set("title") {
	Password Reset for #(userEmail)
}

#set("additional_head_tags") {
	#if(isExecuting) {
		<meta http-equiv="refresh" content="1">
	}
}

#set("body") {
	<h1>Password Reset
	#if(isExecuting) {
		in Progress
	} else {
		Results
	}
	for #(userEmail)</h1>
	<ul>
		<li>LDAP:
			#if(ldapResetStatus.isExecuting) {
				In Progressâ€¦
			} else if(ldapResetStatus.errorStr) {
				Error ðŸ›‘ (#(ldapResetStatus.errorStr))
			} else {
				Success âœ…
			}
		</li>
		<li>Google:
			#if(googleResetStatus.isExecuting) {
				In Progressâ€¦
			} else if(googleResetStatus.errorStr) {
				Error ðŸ›‘ (#(googleResetStatus.errorStr))
			} else {
				Success âœ…
			}
		</li>
		<li>OpenDirectory (Zem):
			#if(openDirectoryResetStatus.isExecuting) {
				In Progressâ€¦
			} else if(openDirectoryResetStatus.errorStr) {
				Error ðŸ›‘ (#(openDirectoryResetStatus.errorStr))
			} else {
				Success âœ…
			}
		</li>
	</ul>
}

#embed("lib/Master")
